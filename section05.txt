Ex14
float factorial(int n){
  float a = 1;
  for (int i=0;i<n;i++){
    a *= (i + 1);
  }
  return a;
}

float fx(float x, int n){
  if (n == 0){
    return 1;
  }else{
    return fx(x, n - 1) + pow(x, n) / factorial(n);
  }
}

void setup(){
  float x = 1.0;
  boolean p = true;
  int memory = 0;
  for (int i=0;i<10;i++){
    float f = fx(x, i + 1);
    float g = abs(exp(1) - f);
    println(i + 1, f, exp(1), g);
    if (p && g < 0.01){
      p = false;
      memory = i + 1;
    }
  }
  println(memory);
}










Ex15
int gcd(int a, int b){
  while (b != 0){
    int prm = b;
    b = a % b;
    a = prm;
  }
  return a;
}

int multiGCD(int[] l){
  int ans = l[0];
  for (int i=1;i<l.length;i++) {
    ans = gcd(ans, l[i]);
  }
  return ans;
}

void setup() {
  int [] datalist = {98, 140, 84, 28, 42, 126};
  println(multiGCD(datalist));
}










Ex16
